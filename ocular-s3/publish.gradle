task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

def isDeployable = hasProperty("ossrhUsername") &&
        hasProperty("ossrhPassword")

if (isDeployable) {
    signing {
        sign configurations.archives
        required { false }
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom.project {
                    name 'ocular-s3'
                    packaging 'jar'
                    description 'Read from wherever you want, however you want. AWS S3 Provider'
                    url 'https://github.com/othree-oss/ocular'

                    scm {
                        connection 'https://github.com/othree-oss/ocular.git'
                        url 'https://github.com/othree-oss/ocular'
                    }

                    licenses {
                        license {
                            name 'The Apache License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id 'othree'
                            name 'Othree'
                            email 'oss@othree.io'
                        }
                    }
                }
            }
        }
    }
}